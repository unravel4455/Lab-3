# -*- coding: utf-8 -*-
"""Lab 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SBNN1W60LwHCHtWfuRwrs6L5u5IBFHoD
"""

from collections import deque

def dfs(graph, start_node, visited=None):
    if visited is None:
        visited = set()
    visited.add(start_node)
    print(start_node, end=" ")

    for neighbor in graph.get(start_node, []):
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

def bfs(graph, start_node):
    visited = set()
    queue = deque([start_node])
    visited.add(start_node)

    while queue:
        current_node = queue.popleft()
        print(current_node, end=" ")

        for neighbor in graph.get(current_node, []):
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)

graph = {
    'Karachi': ['Hyderabad'],
    'Hyderabad': ['Karachi', 'Sukkur'],
    'Sukkur': ['Hyderabad', 'Multan', 'Quetta'],
    'Multan': ['Sukkur', 'Lahore'],
    'Quetta': ['Sukkur'],
    'Lahore': ['Multan', 'Islamabad'],
    'Islamabad': ['Lahore', 'Peshawar'],
    'Peshawar': ['Islamabad']
}

print("DFS traversal:")
dfs(graph, 'Karachi')
print("\nBFS traversal:")
bfs(graph, 'Karachi')